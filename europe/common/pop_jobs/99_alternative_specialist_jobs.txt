artificer = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_factory_1
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}


	resources = {
		category = planet_artisans
		produces = {
			consumer_goods = 7
		}
		upkeep = {
			minerals = 6
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { is_gestalt = no }
				}
			}
			consumer_goods = @requisitorium_consumer_goods_reduction
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { is_gestalt = no }
				}
			}
			minerals = 1
		}
	}

	triggered_planet_modifier = {
		potential = { always = yes }
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	overlord_resources = {
		category = planet_requisitioned_consumer_goods
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { is_gestalt = no }
				}
			}
			consumer_goods = @requisitorium_consumer_goods_overlord
		}
	}

	weight = {
		weight = @specialist_job_weight
		# Europe: added and tweaked weights
		mult = value:job_weights_modifier|JOB|artificer|RESOURCE|consumer_goods|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 5
			has_job = artificer
		}
	}
}

chemist = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_chemical_plant
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_chemists
		produces = {
			# Europe: removed
			#trigger = {
			#	exists = owner
			#	owner = {
			#		is_catalytic_empire = no
			#	}
			#}
			volatile_motes = 2
		}
		# Europe: removed
		#produces = {
		#	trigger = {
		#		exists = owner
		#		owner = {
		#			is_catalytic_empire = yes
		#		}
		#	}
		#	volatile_motes = 2.5
		#}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			minerals = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			food = 12 # Europe: reduced from 15
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|chemist|RESOURCE|volatile_motes|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 7
			has_job = chemist
		}
	}
}

translucer = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_crystal_plant
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_translucers
		produces = {
			# Europe: removed
			#trigger = {
			#	exists = owner
			#	owner = {
			#		is_catalytic_empire = no
			#	}
			#}
			rare_crystals = 2
		}
		# Europe: removed
		#produces = {
		#	trigger = {
		#		exists = owner
		#		owner = {
		#			is_catalytic_empire = yes
		#		}
		#	}
		#	rare_crystals = 2.5
		#}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			minerals = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			food = 12 # Europe: reduced from 15
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|translucer|RESOURCE|rare_crystals|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 7
			has_job = translucer
		}
		modifier = {
			factor = 1.2
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}
}

gas_refiner = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_refinery
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_refiners
		produces = {
			# Europe: removed
			#trigger = {
			#	exists = owner
			#	owner = {
			#		is_catalytic_empire = no
			#	}
			#}
			exotic_gases = 2
		}
		# Europe: removed
		#produces = {
		#	trigger = {
		#		exists = owner
		#		owner = {
		#			is_catalytic_empire = no
		#		}
		#	}
		#	exotic_gases = 2.5
		#}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			minerals = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			food = 12 # Europe: reduced from 15
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|gas_refiner|RESOURCE|exotic_gases|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 7
			has_job = gas_refiner
		}
		modifier = {
			factor = 1.2
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}
}

catalytic_technician = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_foundry_1
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 3 # Europe: reduced from 3.75
		}

		upkeep = {
			food = 7.2 # Europe: reduced from 9
		}

		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_reduction
		}

		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			food = 2.4 # Europe: reduced from 3
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_overlord
		}
	}

	weight = {
		weight = @specialist_job_weight # Fairly important job
		mult = value:job_weights_modifier|JOB|catalytic_technician|RESOURCE|alloys|
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 5
			has_job = catalytic_technician
		}
	}
}

enforcer = {
	category = specialist
	condition_string = BATTLE_THRALL_JOB_TRIGGER
	building_icon = building_precinct_house
	clothes_texture_index = 5

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = {
		battle_thrall_job_check_trigger = yes
	}

	resources = {
		category = planet_enforcers
		produces = {
			trigger = {
				exists = owner
				owner = { has_active_tradition = tr_domination_judgment_corps }
			}
			unity = 1
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = { has_modifier = anticrime_campaign }
			}
			energy = 2
		}
	}

	pop_modifier = {
	 	pop_defense_armies_add = 2
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				exists = ruler
				ruler = {
					has_trait = leader_trait_legendary_harsh_ruler
				}
			}
		}
		pop_happiness = -0.025
	}

	planet_modifier = {
		planet_crime_add = -25
		planet_stability_add = 1
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_modifier = anticrime_campaign }
		}
		modifier = {
			planet_crime_add = -10
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_stability_modifier|STABILITY|1| # Europe: added to factor in stability effect

		modifier = {
			mult = value:job_weights_modifier|JOB|enforcer|RESOURCE|unity|FACTOR|0.25|
			owner = { has_active_tradition = tr_domination_judgment_corps }
		}

		modifier = {
			factor = 10
			has_job = enforcer
		}
		modifier = {
			factor = 10
			planet = { planet_crime > 15 }
			NOR = {
				has_job = enforcer
				has_job = telepath # Europe: added because they also reduce crime
			}
		}
		modifier = {
			factor = 0.01
			planet = { planet_crime <= 15}
			NOR = {
				has_job = enforcer
				has_job = telepath # Europe: added because they also reduce crime
			}
		}

		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_trait = trait_resilient
		}
		modifier = {
			factor = 2
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 1.5
			has_trait = trait_strong
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			has_slavery_type = { type = slavery_military }
		}
		modifier = {
			factor = 0.50
			has_trait = trait_weak
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.1
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 2
			has_trait = trait_presapient_earthbound
		}
		modifier = {
			factor = 1.1
			has_trait = trait_limited_regeneration
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
	}
}

bureaucrat = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_capital
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_byzantine_bureaucracy }
		}
		modifier = {
			planet_stability_add = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|bureaucrat|RESOURCE|unity|
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|bureaucrat|RESOURCE|unity|
		modifier = {
			mult = value:job_weights_stability_modifier|STABILITY|1| # Europe: added to factor in stability effect
			owner = { has_valid_civic = civic_byzantine_bureaucracy }
		}
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = bureaucrat
		}
	}
}

unifier = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_capital
	clothes_texture_index = 3
	icon = overlord_propagandist

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 1
		}
		upkeep = {
			trigger = {
				is_lithoid_empire = no
			}
			food = 2
		}
		upkeep = {
			trigger = {
				is_lithoid_empire = yes
			}
			minerals = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_byzantine_bureaucracy }
		}
		modifier = {
			planet_stability_add = 1
		}
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|unifier|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|unifier|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			mult = value:job_weights_stability_modifier|STABILITY|1| # Europe: added to factor in stability effect
			owner = { has_valid_civic = civic_byzantine_bureaucracy }
		}
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = unifier
		}
		modifier = {
			factor = 2
			exists = planet
			planet = {
				any_owned_pop = {
					NOT = { has_job = unifier }
				}
			}
		}
	}
}

culture_worker = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_autochthon_monument
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_culture_workers
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 3
		}
	}

	inline_script = "jobs/culture_worker_outputs"

	planet_modifier = {
		pop_government_ethic_attraction = 0.10
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|culture_worker|RESOURCE|unity|
		# We deliberately don't weight the ethics-based modifiers
		modifier = { # Europe: added weighting, but only for materialists because they produce amenities
			exists = owner
			owner = { is_materialist = yes }
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		}
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = culture_worker
		}
	}
}

death_chronicler = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_galactic_memorial_1
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = { complex_specialist_job_check_trigger = yes }

	resources = {
		category = planet_culture_workers
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 3
		}
	}

	inline_script = "jobs/culture_worker_outputs"

	planet_modifier = {
		planet_stability_add = 2.5
	}

	weight = {
		weight = @specialist_job_weight
		mult = 2
		mult = value:job_weights_modifier|JOB|death_chronicler|RESOURCE|unity|
		mult = value:job_weights_stability_modifier|STABILITY|2.5| # Europe: added to factor in stability effect
		# We deliberately don't weight the ethics-based modifiers
		modifier = { # Europe: added weighting, but only for materialists because they produce amenities
			exists = owner
			owner = { is_materialist = yes }
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		}
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = death_chronicler
		}
	}
}

telepath = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_psi_corps
	clothes_texture_index = 5

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		OR = {
			has_trait = trait_latent_psionic
			has_trait = trait_psionic
		}
	}

	resources = {
		category = planet_telepaths
		produces = {
			unity = 9
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_active_tradition = tr_domination_judgment_corps }
			}
			unity = 1
		}

		produces = {
			trigger = {
				exists = owner
				owner = { has_country_flag = whisperers_covenant_confirmed }
			}
			physics_research = 3
			engineering_research = 3
			society_research = 3
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_country_flag = whisperers_covenant_rank_1 }
			}
			physics_research = 3
			engineering_research = 3
			society_research = 3
		}
		upkeep = {
			energy = 1
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = { has_modifier = anticrime_campaign }
			}
			energy = 2
		}
	}

	planet_modifier = {
		planet_crime_add = -10
		planet_psionic_jobs_produces_mult = 0.05
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				exists = ruler
				ruler = {
					has_trait = leader_trait_legendary_harsh_ruler
				}
			}
		}
		pop_happiness = -0.025
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = instrument_covenant_confirmed }
		}
		planet_amenities_add = 7
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = instrument_covenant_rank_1 }
		}
		planet_amenities_add = 8
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner  = { has_tradition = tr_psionics_breach_shroud }
		}
		modifier = {
			planet_psionic_jobs_produces_mult = 0.05
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_modifier = anticrime_campaign }
		}
		modifier = {
			planet_crime_add = -10
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_edict = thought_enforcement }
		}
		modifier = {
			planet_crime_add = -30
		}
	}

	triggered_planet_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_psionic_sovereign" }
		}
		planet_psionic_jobs_produces_mult = 0.01
		mult = value:councilor_level|TYPE|councilor_psionic_sovereign|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = composer_covenant_confirmed }
		}
		modifier = {
			pop_growth_speed = 0.02
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = composer_covenant_rank_1 }
		}
		modifier = {
			pop_growth_speed = 0.03
		}
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = eater_covenant_confirmed }
		}
		country_naval_cap_add = 5
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = eater_covenant_rank_1 }
		}
		country_naval_cap_add = 7
	}

	weight = {
		weight = @specialist_job_weight
		mult = 2
		mult = value:job_weights_modifier|JOB|telepath|RESOURCE|unity|
		modifier = { # Europe: added so that we prefer telepaths over enforcers for crime
			factor = 10
			planet = { planet_crime > 10 }
			NOR = {
				has_job = enforcer
				has_job = telepath
			}
		}
		modifier = { # Europe: added to account for amenities production
			exists = owner
			owner = {
				OR = {
					has_country_flag = instrument_covenant_confirmed
					has_country_flag = instrument_covenant_rank_1
				}
			}
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		}
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
		}
		modifier = {
			factor = 2
			has_trait = trait_resilient
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = telepath
		}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}
}
