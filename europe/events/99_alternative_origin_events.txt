namespace = origin

# Broken Shackles Setup
country_event = {
	id = origin.110
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		low_tech_start_add_research_options_effect = yes

		# Broken Shackles pops are aware of alien life
		set_country_flag = encountered_first_primitive
		set_country_flag = first_contact_event
		set_country_flag = first_alien_life
		set_country_flag = Story1
		set_country_flag = Story2 # Already encountered spacefarers
		set_country_flag = Story3
		set_country_flag = Story4
		set_country_flag = Story5
		set_country_flag = Story6
		set_country_flag = Story7
		set_country_flag = has_encountered_other_empire

		if = {
			limit = {
				count_country = {
					limit = {
						is_primitive = yes
					}
					count < 3
				}
			}
			capital_scope = {
				while = {
					count = 3
					spawn_system = {
						min_distance = 10
						max_distance = 100
						initializer = pre_ftl_init_01
						hyperlane = no
						is_discovered = no
					}
					add_extra_hyperlane_to_spawned_system_effect = yes
					add_extra_hyperlane_to_spawned_system_effect = yes
				}
			}
		}

		capital_scope = {
			solar_system = {
				set_star_flag = broken_shackles_system
			}
			while = {
				limit = { num_pops < 28 }
				if = {
					limit = {
						any_country = {
							species = {
								ideal_planet_is_special = no
								NOT = { has_trait = trait_hive_mind }
							}
							OR = {
								is_preftl_but_not_special = yes
								AND = {
									has_slave_origin = yes
									NOT = { is_same_value = root }
								}
							}
						}
					}
					random_country = {
						limit = {
							species = {
								ideal_planet_is_special = no
								NOT = { has_trait = trait_hive_mind }
							}
							OR = {
								is_preftl_but_not_special = yes
								AND = {
									has_slave_origin = yes
									NOT = { is_same_value = root }
								}
							}
						}
						set_country_flag = broken_shackles_abductees_country
						set_country_flag = broken_shackles_abductees@root
						owner_species = { save_event_target_as = random_primitive_species }
						capital_scope = {
							set_planet_flag = broken_shackles_abductees_world@root
						}
						if = {
							limit = {
								is_primitive = yes
								has_awareness < 75
							}
							set_awareness = 75
						}
					}
					create_pop = {
						species = event_target:random_primitive_species
						ethos = random
					}
				}
			}
			check_planet_employment = yes

			# Dig site
			owner = {
				set_country_flag = broken_shackles_origin_arcsite_owner@prev
			}
			create_archaeological_site = broken_shackles_digsite
		}

		if = {
			limit = {
				has_paragon_dlc = yes
			}
			unlock_council_slots = 3
			set_council_position_to_council = councilor_research
			set_council_position_to_council = councilor_defense
			set_council_position_to_council = councilor_state
		}

		random_owned_pop = {
			species = {
				save_event_target_as = researcher_species
			}
		}
		create_leader = {
			class = scientist
			name = random
			species = event_target:researcher_species
			effect = {
				set_council_position = councilor_research
			}
		}

		random_owned_pop = {
			species = {
				save_event_target_as = defense_species
			}
		}
		create_leader = {
			class = commander
			name = random
			species = event_target:defense_species
			effect = {
				set_council_position = councilor_defense
			}
		}

		random_owned_pop = {
			species = {
				save_event_target_as = state_species
			}
		}
		create_leader = {
			class = official
			name = random
			species = event_target:state_species
			effect = {
				set_council_position = councilor_state
				root.capital_scope = {
					assign_leader = last_created_leader
				}
			}
		}

		if = {
			limit = {
				is_human_species = no
			}
			random_country = {
				limit = {
					has_country_flag = broken_shackles_parent_of@root
				}
				capital_scope = { change_pc = root.species }
			}
		}
		else = {
			# Spawn Primitive Earth if no other Earth exists
			if = {
				limit = {
					NOT = {
						exists = event_target:sol_system_earth
					}
				}
				random_system = {
					limit = { NOT = { has_star_flag = empire_cluster } }
					spawn_system = {
						min_distance = 10
						max_distance = 30
						max_jumps = 0
						initializer = "pre_ftl_init_sol"
					}
				}
			}

			set_country_flag = parent_system_spawned
			save_event_target_as = broken_shackles_child

			# Now make Earth our homeworld
			event_target:sol_system_earth = {
				if = {
					limit = {
						exists = owner
					}
					owner = {
						set_country_flag = broken_shackles_parent_country
						set_country_flag = special_intro_for@event_target:broken_shackles_child
						set_country_flag = broken_shackles_parent_of@event_target:broken_shackles_child
					}
					set_planet_flag = broken_shackles_homeworld_@root
					solar_system = {
						set_star_flag = broken_shackles_home_system_@root
					}
				}
			}

			owner_species = { set_species_homeworld = event_target:sol_system_earth }
		}

		# Safety pops in case there are literally no other primitives in the galaxy
		capital_scope = {
			while = {
				limit = { num_pops < 28 }
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
			check_planet_employment = yes
		}
		random_country = {
			limit = {
				has_country_flag = broken_shackles_parent_of@root
				is_primitive = yes
			}
			set_awareness = 75
		}

		# Europe: made universal
		# Parliamentary System interaction
		#if = {
		#	limit = {
		#		has_valid_civic = civic_parliamentary_system
		#	}
			country_event = {
				id = origin.5041
				days = 180 # Europe: changed from 30
			}
		#}
	}
}

# Stage 5 - Data Mine

fleet_event = {
	id = origin.5035
	title = "origin.5035.name"
	desc = {
		text = "origin.5035.desc"
		trigger = {
			OR = {
				NOT = { exists = event_target:MSI_country } # Europe: added
				owner = {
					has_communications = event_target:MSI_country
				}
			}
		}
	}
	desc = {
		text = "origin.5035.desc.MSInocontact"
		trigger = {
			exists = event_target:MSI_country # Europe: added
			owner = {
				NOT = { has_communications = event_target:MSI_country }
			}
		}
	}
	picture = GFX_evt_ancient_databank
	show_sound = event_scanner

	archaeology = yes

	is_triggered_only = yes

	immediate = {
		from = { set_site_progress_locked = yes }
		owner = {
			if = {
				limit = {
					exists = event_target:MSI_country # Europe: added
					NOT = { has_communications = event_target:MSI_country }
				}
				set_visited = event_target:MSI_country.capital_scope.solar_system
				create_point_of_interest = {
					id = MSI_home_system
					name = "MSI_home_system_poi"
					desc = MSI_home_system_desc
					event_chain = MSI_chain
					location = event_target:MSI_country.capital_scope
				}
			}
			random_owned_species = {
				limit = {
					has_species_flag = engineering_species
				}
				save_event_target_as = engineering_shackled_species
			}
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_valid_civic = civic_scavengers
						has_valid_civic = civic_corporate_scavengers
					}
				}
			}
			random_list = {
				90 = {}
				10 = {
					from = { set_archaeology_flag = scavenger_reward }
				}
			}
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			NOT = {
				from = { has_archaeology_flag = scavenger_reward }
			}
		}
		owner = {
			remove_modifier = broken_shackles_arc_site
			enable_special_project = {
				name = "BROKEN_SHACKLES_PROJECT_01"
			}
			if = {
				limit = {
					exists = event_target:MSI_country # Europe: added
					NOT = { has_communications = event_target:MSI_country }
				}
				add_modifier = {
					modifier = "broken_shackles_MSI_found"
					days = 3600
				}
			}

			capital_scope = {
				remove_deposit = d_ship_debris_broken_shackles_blocker
			}
		}
		hidden_effect = {
			owner = {
				set_country_flag = broken_shackles_scrappers
				country_event = {
					id = origin.111
					days = 120
					random = 20
				}
			}
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			owner = {
				OR = {
					has_valid_civic = civic_scavengers
					has_valid_civic = civic_corporate_scavengers
				}
			}
			from = { has_archaeology_flag = scavenger_reward }
		}
		owner = {
			remove_modifier = broken_shackles_arc_site
			enable_special_project = {
				name = "BROKEN_SHACKLES_PROJECT_01"
			}
			if = {
				limit = {
					exists = event_target:MSI_country # Europe: added
					NOT = { has_communications = event_target:MSI_country }
				}
				add_modifier = {
					modifier = "broken_shackles_MSI_found"
					days = 3600
				}
			}
			add_monthly_resource_mult = {
				resource = alloys
				value = @tier1materialreward
				min = @tier1materialmin
				max = @tier1materialmax
			}

			capital_scope = {
				remove_deposit = d_ship_debris_broken_shackles_blocker
			}
		}
		hidden_effect = {
			owner = {
				set_country_flag = broken_shackles_scrappers
				country_event = {
					id = origin.111
					days = 120
					random = 20
				}
			}
		}
	}
	
	after = {
		from = { set_site_progress_locked = no }
		owner = {
			end_event_chain = MSI_chain
		}
	}
}